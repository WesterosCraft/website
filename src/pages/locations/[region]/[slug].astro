---
import { getCollection } from "astro:content";
import LocationLayout from "@layouts/location.astro";
import { slugify, camel2title } from "@lib/utils";
import ProjectDetailsCard from "@components/project-details-card.astro";
import Prose from "@components/prose.astro";
import BackToLocationsLink from "@components/back-to-locations-link.astro";

export async function getStaticPaths() {
  const locations = await getCollection("locations");

  return locations.map((location) => {
    return {
      params: {
        region: slugify(camel2title(location.data.region)),
        slug: location.slug,
      },
      props: {
        location: { ...location },
      },
    };
  });
}

const { location } = Astro.props;
const { Content } = await location?.render();
---

<LocationLayout title={`${location?.data.title} - WesterosCraft`}>
  <BackToLocationsLink slot='back-to-locations' />
  {
    location?.data && (
      <ProjectDetailsCard
        slot='location-details'
        projectDetails={location?.data}
      />
    )
  }
  <Fragment slot='location-image'>
    {
      location?.data?.locationImages &&
        location?.data?.locationImages.length && (
          <div class='relative flex w-full h-[400px] overflow-hidden shadow-md mb-12'>
            <img
              class='absolute h-full w-full left-0 top-0 right-0 bottom-0 object-cover'
              src={location?.data?.locationImages[0]?.src as string}
              alt={location?.data.title || "Images"}
            />
          </div>
        )
    }
  </Fragment>
  <Fragment slot='location-content'>
    {
      Content && (
        <div class='pb-12 break-words'>
          <Prose>
            <Content />
          </Prose>
        </div>
      )
    }
  </Fragment>
</LocationLayout>
