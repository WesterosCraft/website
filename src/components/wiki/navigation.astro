---
import { MatchSorterSearch } from "@components/match-sorter-search";
import clsx from "clsx";
const { navigation, className } = Astro.props;
const pathname = Astro.url.pathname;
import { slugify, camel2title } from "@lib/utils";

import { getCollection } from "astro:content";

const locationsdirectories = await getCollection("locations");
const docsdirectories = await getCollection("docs");

const normalizedDocs = docsdirectories?.map((x) => ({
  title: x.data.title,
  route: "/docs/" + slugify(camel2title(x.data.docCategory)) + "/" + x.slug,
  type: "doc",
}));

const normalizedDirectories = normalizedDocs;
---

<nav class={clsx("text-base lg:text-sm", className)}>
  <ul class='space-y-9'>
    <MatchSorterSearch
      directories={normalizedDirectories}
      client:only='react'
    />
    {
      navigation.map((section: any) => (
        <li>
          <h2 class='font-display font-medium text-slate-900 dark:text-white'>
            {section.title}
          </h2>
          <ul class='mt-2 space-y-2 border-l-2 border-primaryLightBorder lg:mt-4 lg:space-y-4'>
            {section.links.map((link: any) => (
              <li class='relative'>
                <a
                  href={link.href}
                  class={clsx(
                    "block w-full pl-3.5 before:pointer-events-none before:absolute before:-left-1 before:top-1/2 before:h-1.5 before:w-1.5 before:-translate-y-1/2 before:rounded-full",
                    {
                      "font-semibold text-primaryRed before:bg-primaryRed":
                        link.href === pathname,
                      "text-slate-600 before:hidden before:bg-primaryLightBorder hover:text-slate-700 hover:before:block":
                        link.href !== pathname,
                    }
                  )}
                >
                  {link.title}
                </a>
              </li>
            ))}
          </ul>
        </li>
      ))
    }
  </ul>
</nav>
