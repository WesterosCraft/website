---
import { MatchSorterSearch } from "@components/match-sorter-search";
import clsx from "clsx";
const { navigation, className } = Astro.props;
const pathname = Astro.url.pathname;
import { slugify, camel2title } from "@lib/utils";
import { NavSection } from "./nav-section";
import { getCollection } from "astro:content";
import { Button } from "@components/ui/button";

const docsdirectories = await getCollection("docs");

const normalizedDocs = docsdirectories?.map((x) => ({
  title: x.data.title,
  route: "/docs/" + slugify(camel2title(x.data.docCategory)) + "/" + x.slug,
  type: "doc",
}));

const normalizedDirectories = normalizedDocs;
---

<nav class={clsx("text-base lg:text-sm", className)}>
  <MatchSorterSearch directories={normalizedDirectories} client:only='react' />
  <ul class='not-prose space-y-1 mt-8'>
    <li>
      <Button
        asChild
        variant='ghost'
        size='sm'
        className='text-[13px] w-full py-[6px] px-2 font-display font-medium text-left'
      >
        <a
          href='/docs'
          class={clsx("py-2 px-2 block w-full", {
            "font-semibold text-primaryRed bg-primaryRed/10":
              pathname === "/docs",
            "text-slate-600 first-letter:hover:text-slate-700 hover:bg-primaryLightBorder/30":
              pathname !== "/docs",
          })}
        >
          Introduction
        </a>
      </Button>
    </li>

    {
      navigation.map((section: any) => (
        <li>
          <NavSection
            client:only='react'
            title={section?.title}
            pathname={pathname}
            links={section?.links}
          />
        </li>
      ))
    }
  </ul>
</nav>
